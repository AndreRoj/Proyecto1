/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaces;

import Clases.Camino;
import Clases.Ciudad;
import Clases.ListaCaminos;
import Clases.ListaCiudad;
import Clases.NodoCiudad;
import Funciones.Global;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Jose
 */
public class Ventana2 extends javax.swing.JFrame {

    /**
     * Creates new form Ventana2
     */
    public Ventana2() {
        setTitle("Hormigas GPS");
        setSize(470, 400);
        setResizable(false);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        menu = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        panelRound2 = new Clases.PanelRound();
        cargarArchivo = new javax.swing.JButton();
        nombreArchivo = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        panelRound1 = new Clases.PanelRound();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 140, -1, -1));

        menu.setBackground(new java.awt.Color(137, 109, 137));
        menu.setFont(new java.awt.Font("Agency FB", 1, 14)); // NOI18N
        menu.setForeground(new java.awt.Color(253, 253, 253));
        menu.setText("Menu");
        menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuActionPerformed(evt);
            }
        });
        getContentPane().add(menu, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 310, -1, -1));

        jPanel2.setBackground(new java.awt.Color(76, 60, 76));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelRound2.setBackground(new java.awt.Color(253, 253, 253));
        panelRound2.setForeground(new java.awt.Color(253, 253, 253));
        panelRound2.setRoundBottomLeft(10);
        panelRound2.setRoundBottomRight(10);
        panelRound2.setRoundTopLeft(10);
        panelRound2.setRoundTopRight(10);
        panelRound2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cargarArchivo.setBackground(new java.awt.Color(137, 109, 137));
        cargarArchivo.setFont(new java.awt.Font("Agency FB", 1, 24)); // NOI18N
        cargarArchivo.setForeground(new java.awt.Color(253, 253, 253));
        cargarArchivo.setText("Buscar archivo");
        cargarArchivo.setBorder(null);
        cargarArchivo.setBorderPainted(false);
        cargarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarArchivoActionPerformed(evt);
            }
        });
        panelRound2.add(cargarArchivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, 180, 60));

        nombreArchivo.setFont(new java.awt.Font("Agency FB", 0, 14)); // NOI18N
        nombreArchivo.setForeground(new java.awt.Color(51, 51, 51));
        nombreArchivo.setText("...");
        panelRound2.add(nombreArchivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 300, 20));

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Agency FB", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Nombre del archivo cargado:");
        panelRound2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jPanel2.add(panelRound2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 430, 180));

        jLabel4.setBackground(new java.awt.Color(253, 253, 253));
        jLabel4.setFont(new java.awt.Font("Agency FB", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(253, 253, 253));
        jLabel4.setText("Carga tu archivo con las ciudades");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, -1, -1));

        jLabel3.setFont(new java.awt.Font("Agency FB", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(253, 253, 253));
        jLabel3.setText("(Solo archivos de tipo .txt)");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, -1, -1));

        jLabel5.setBackground(new java.awt.Color(253, 253, 253));
        jLabel5.setFont(new java.awt.Font("Agency FB", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(253, 253, 253));
        jLabel5.setText("y la distancias entre ellas");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, -1, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 370));

        javax.swing.GroupLayout panelRound1Layout = new javax.swing.GroupLayout(panelRound1);
        panelRound1.setLayout(panelRound1Layout);
        panelRound1Layout.setHorizontalGroup(
            panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 430, Short.MAX_VALUE)
        );
        panelRound1Layout.setVerticalGroup(
            panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        getContentPane().add(panelRound1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 430, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cargarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarArchivoActionPerformed
        //Para cargar el archivo
        JFileChooser file = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(".txt", "txt");
        file.setFileFilter(filter);
        file.setAcceptAllFileFilterUsed(false);
        int result = file.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            Global.setFile(file.getSelectedFile());
            nombreArchivo.setText(Global.getFile().getName());
            JOptionPane.showMessageDialog(null, "Su archivo a sido cargado con exito, haga click en 'MENÚ'");
        }
    }//GEN-LAST:event_cargarArchivoActionPerformed
    
    private boolean FileIsEmpty(){
        return Global.getFile() == null;
    }
    
    private Ciudad definirCiudad(int element, ListaCiudad listaciudad){
        NodoCiudad pointer = listaciudad.getHead();
        while(pointer.getElement().getName() != element){
            pointer = pointer.getNext();
        }
        return pointer.getElement();
    }
    
    private void menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuActionPerformed
        if (FileIsEmpty()){
            //SE MUESTRA UN MENSAJE DE ERROR EN CASO DE QUE NO SE HAYA SELECCIONADO NINGUN ARCHIVO
            JOptionPane.showMessageDialog(null, "Debe seleccionar un archivo primero");
        }else{
            //CODIGO PARA LEERLO//
            String filePath = Global.getFile().getAbsolutePath();
            ListaCaminos listacaminos = new ListaCaminos();
            ListaCiudad listaciudad = new ListaCiudad();
            try {
            // Crear un objeto BufferedReader para leer el archivo
            BufferedReader br = new BufferedReader(new FileReader(filePath));
            String linea;
            String separador = ",";
            //para verificación durante la lectura
            boolean readingCities = true;
            // Leer la primera línea del archivo (encabezado)
            linea = br.readLine();
            // Leer las siguientes líneas del archivo (datos)
            while ((linea = br.readLine()) != null) {
                if(linea.equals("ciudad")){
                    readingCities = true;
                    continue;  // Saltamos esta línea para no guardar "Ciudad"
                }
                if(linea.equals("arista")){
                    readingCities = false;
                    continue;  // Saltamos esta línea para no guardar "Arista"
                }
                if(readingCities){
                     // Crear un objeto Ciudad con los campos leídos
                    Ciudad ciudad = new Ciudad(Integer.parseInt(linea));
                    // Agregar el objeto nodoCiudad a la lista de usuarios
                    listaciudad.insertFinal(ciudad);    
                }
                if(!readingCities){
                    // Dividir la línea por el separador y guardar los campos en un arreglo
                    String[] campos = linea.split(separador);
                    //Se usa la función para buscar el objeto ciudad en la lista para los campos del objeto Camino
                    Ciudad c_inicial = definirCiudad(Integer.parseInt(campos[0]),listaciudad);
                    Ciudad c_final = definirCiudad(Integer.parseInt(campos[1]),listaciudad);
                    //Crear un objeto Camino con los campos leídos
                    Camino camino = new Camino(c_inicial, c_final, Float.parseFloat(campos[2]));
                    // Agregar el objeto Camino a la lista de caminos
                    listacaminos.insertFinal(camino);
                } 
            }
            //se guarda la lista de ciudades en el global para su uso
            Global.setListaciudades(listaciudad);
            //se guarda la lista de caminos en el global para su uso
            Global.setListacaminos(listacaminos);
            // Cerrar el objeto BufferedReader
            br.close();
            
//            System.out.println("CIUDADES");
            //Global.getListaciudades().print();
//            System.out.println("CAMINOS");
            //Global.getListacaminos().print();

            //Cargar la siguiente ventana,Ventana3 la que posee las acciones del programa si cumple con que exitan un mínimo de 4 ciudades o un máximo de
            //20 ciudades y que existan caminos para el recorrido
            if(Global.getListaciudades().getSize() > 20 || Global.getListaciudades().getSize() < 4){
                if(Global.getListaciudades().getSize() > 20){
                    JOptionPane.showMessageDialog(null,"Solo se aceptan un máximo de 20 ciudades, por favor elimine un par de ciudades");
                }else{
                    JOptionPane.showMessageDialog(null,"Se necesitan un mínimo de 4 ciudades para iniciar el programa, por favor agrege más ciudades");
                }
            }else if(Global.getListacaminos().getSize() == 0){
                JOptionPane.showMessageDialog(null,"No se encontraron caminos registrados, se necesitan caminos entre ciudades para el funcionamiento correcto del programa, por favor agrege caminos");
            }else{
                Ventana3 ventana3 = new Ventana3();
                ventana3.setVisible(true);
                this.dispose();
            }
            
            } catch (Exception e) {
                // Mostrar por consola el mensaje de la excepción y una sugerencia general
                JOptionPane.showMessageDialog(null,"Error al leer el archivo: "+e.getMessage()+"\nVerifique que no haya espacios vacios, comas extra o que los datos esten escritos como 'ciudad' y 'arista',  etc");
            }
        }
        
    }//GEN-LAST:event_menuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cargarArchivo;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton menu;
    private javax.swing.JLabel nombreArchivo;
    private Clases.PanelRound panelRound1;
    private Clases.PanelRound panelRound2;
    // End of variables declaration//GEN-END:variables
}
